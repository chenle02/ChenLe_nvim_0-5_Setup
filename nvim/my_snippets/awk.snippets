priority -50

#################################
# Snippets for the awk language #
#################################
#{{{ #! "#!/usr/bin/awk -f" b
snippet #! "#!/usr/bin/awk -f" b
#!/usr/bin/awk -f
$0
endsnippet
#}}}
#{{{  score1 "Compute scores for Math5870" b
snippet score1 "Compute scores for Math5870" b
#!/usr/bin/awk -f
#
BEGIN {
	ORS=",";
	FS=OFS=",";
	FPAT = "([^,]+)|(\"[^\"]+\")";
	Stat["F"]=0;
	Stat["D+"]=0;
	Stat["D"]=0;
	Stat["D-"]=0;
	Stat["C+"]=0;
	Stat["C"]=0;
	Stat["C-"]=0;
	Stat["B+"]=0;
	Stat["B"]=0;
	Stat["B-"]=0;
	Stat["A"]=0;
	Stat["A-"]=0;
} {
	if (NR==1) {       # old # New
		print ",Name"    # \$1  # \$1
		print "Quiz1"    # \$6  # \$2
		print "Quiz2"    # \$7  # \$3
		print "Quiz3"    # \$8  # \$4
		print "Quiz4"    # \$9  # \$5
		print "Quiz5"    # \$10 # \$6
		print "Quiz6"    # \$11 # \$7
		print "Test3"    # \$12 # \$8
		print "Test1"    # \$13 # \$9
		print "Test2"    # \$14 # \$10
		print "Final"    # \$15 # \$11
		print "Weighted" # \$16 # \$12
		print "Letter"   # \$17 # \$13
		print "Curved\n" # \$18 # \$14
	} else if (NR>2) {
		print \$1;
		for ( i = 6; i < 16; i++ ) {
			print \$i;
		};
		score =   \$6*0.2/6 \
						 +\$7*0.2/6\
						 +\$8*0.2/6\
						 +\$9*0.2/6\
						 +\$10*0.2/6\
						 +\$11*0.2/6\
						 +\$12*0.15\
						 +\$13*0.15\
						 +\$14*0.15\
						 +\$15*0.35
		print score;
		letter = ""
		if (score < 59.9){
			letter = "F";
			Stat["F"] +=1;
		}
		else if (score <61.9){
			letter = "D-";
			Stat["D-"] +=1;
		}
		else if (score <67.9){
			letter = "D";
			Stat["D"] +=1;
		}
		else if (score <69.9){
			letter = "D+";
			Stat["D+"] +=1;
		}
		else if (score <71.9){
			letter = "C-";
			Stat["C-"] +=1;
		}
		else if (score <77.9){
			letter = "C";
			Stat["C"] +=1;
		}
		else if (score <79.9){
			letter = "C+";
			Stat["C+"] +=1;
		}
		else if (score <81.9){
			letter = "B-";
			Stat["B-"] +=1;
		}
		else if (score <87.9){
			letter = "B";
			Stat["B"] +=1;
		}
		else if (score <89.9){
			letter = "B+";
			Stat["B+"] +=1;
		}
		else if (score <91.9){
			letter = "A-";
			Stat["A-"] +=1;
		}
		else{
			letter = "A";
			Stat["A"] +=1;
		}
		print letter;
		print letter"\n";
	}
}
END{
	# Now explain the way of computing the scores
	print "\n"
	print "Weighted="
	print "Quiz1*0.2/6+...+Quiz6*0.2/6+Test1*0.15+Test2*0.15+Test2*0.15\n"
	# Now explain the way of curving
	print "Curve"
	print "Roundup in case\n"
	print "\n"
	# Now stat before curving
	print "Stat before curving"
	n=asorti(Stat, sorted)
	SumStudent=0;
	SumPercentage=0;
	for (i=1; i<=n; i++) {
		Num = Stat[sorted[i]];
		Percent = Stat[sorted[i]]/(NR-2);
		print ""
		print sorted[i]
		print Num
		print Percent
		print "\n"
		SumStudent += Stat[sorted[i]];
		SumPercentage += Percent;
	}
	print ""
	print "Sum"
	print SumStudent
	print SumPercentage
	print "\n"
}
endsnippet
# }}}
#{{{  score2 "Compute scores for Stat3600" b
snippet score2 "Score for Stat3600"
#!/usr/bin/awk -f
#
BEGIN {
	FS=OFS=ORS=",";
	FPAT="([^,]*)|(\"[^\"]+\")";
	Stat["F"]=0; TunedStat["F"]=0;
	Stat["D+"]=0;TunedStat["D+"]=0;
	Stat["D"]=0; TunedStat["D"]=0;
	Stat["D-"]=0;TunedStat["D-"]=0;
	Stat["C+"]=0;TunedStat["C+"]=0;
	Stat["C"]=0; TunedStat["C"]=0;
	Stat["C-"]=0;TunedStat["C-"]=0;
	Stat["B+"]=0;TunedStat["B+"]=0;
	Stat["B"]=0; TunedStat["B"]=0;
	Stat["B-"]=0;TunedStat["B-"]=0;
	Stat["A"]=0; TunedStat["A"]=0;
	Stat["A-"]=0;TunedStat["A-"]=0;
} {
	if (NR==1) {       # old # New
		print ",Name"    # \$1  # \$1
		print "HW01"     # \$6  # \$2
		print "HW02"     # \$7  # \$3
		print "HW03"     # \$8  # \$4
		print "HW04"     # \$9  # \$5
		print "HW05"     # \$10 # \$6
		print "HW06"     # \$11 # \$7
		print "HW07"     # \$12 # \$8
		print "HW08"     # \$13 # \$9
		print "HW09"     # \$14 # \$10
		print "HW10"     # \$15 # \$11
		print "HW11"     # \$16 # \$12
		print "HW12"     # \$17 # \$13
		print "Midterm"  # \$18 # \$14
		print "Final"    # \$19 # \$15
		print "Weighted" # ..  # \$16
		print "Letter"   # ..  # \$17
		print "Curved\n" # ..  # \$18
	} else if (NR>2) {
		print \$1;
		for ( i = 6; i < 20; i++ ) {
			if (\$i=="") \$i=0.00;
			print \$i;
		};
		MinHW = 100;
		HWSum = 0;
		for ( i = 6; i < 18; i++ ) {
			if (\$i < MinHW) MinHW = \$i;
			HWSum += \$i;
		};
		HWSum = HWSum - MinHW;
		score =   HWSum*0.2/11 \
						 +\$18*0.3 \
						 +\$19*0.50
		print score;
		letter = ""
		if (score < 59.9){
			letter = "F";
			Stat["F"] +=1;
		}
		else if (score <61.9){
			letter = "D-";
			Stat["D-"] +=1;
		}
		else if (score <67.9){
			letter = "D";
			Stat["D"] +=1;
		}
		else if (score <69.9){
			letter = "D+";
			Stat["D+"] +=1;
		}
		else if (score <71.9){
			letter = "C-";
			Stat["C-"] +=1;
		}
		else if (score <77.9){
			letter = "C";
			Stat["C"] +=1;
		}
		else if (score <79.9){
			letter = "C+";
			Stat["C+"] +=1;
		}
		else if (score <81.9){
			letter = "B-";
			Stat["B-"] +=1;
		}
		else if (score <87.9){
			letter = "B";
			Stat["B"] +=1;
		}
		else if (score <89.9){
			letter = "B+";
			Stat["B+"] +=1;
		}
		else if (score <91.9){
			letter = "A-";
			Stat["A-"] +=1;
		}
		else{
			letter = "A";
			Stat["A"] +=1;
		}
		print letter;
		# Curving by multiplying 1.2 to the final score
		score = 1.18 * score;
		letter = ""
		if (score < 59.9){
			letter = "F";
			TunedStat["F"] +=1;
		}
		else if (score <61.9){
			letter = "D-";
			TunedStat["D-"] +=1;
		}
		else if (score <67.9){
			letter = "D";
			TunedStat["D"] +=1;
		}
		else if (score <69.9){
			letter = "D+";
			TunedStat["D+"] +=1;
		}
		else if (score <71.9){
			letter = "C-";
			TunedStat["C-"] +=1;
		}
		else if (score <77.9){
			letter = "C";
			TunedStat["C"] +=1;
		}
		else if (score <79.9){
			letter = "C+";
			TunedStat["C+"] +=1;
		}
		else if (score <81.9){
			letter = "B-";
			TunedStat["B-"] +=1;
		}
		else if (score <87.9){
			letter = "B";
			TunedStat["B"] +=1;
		}
		else if (score <89.9){
			letter = "B+";
			TunedStat["B+"] +=1;
		}
		else if (score <91.9){
			letter = "A-";
			TunedStat["A-"] +=1;
		}
		else{
			letter = "A";
			TunedStat["A"] +=1;
		}
		print letter"\n";
	}
}
END{
	# Now explain the way of computing the scores
	print "\n"
	print "Weighted="
	print "Average HW (after removing the worst one) * 0.2 + Midterm * 0.3 + Final * 0.5\n"
	# Now explain the way of curving
	print "Curve"
	print "Weighted*1.18\n"
	print ",Logan D Massey, Missed the final due to a health condition with a doctor document, I used the midterm exam to replace final exam.\n"
	print "\n"
	# Now stat before curving
	print "Stat, before curving,Percentage,after curving,Percentage\n"
	n=asorti(Stat, sorted)
	SumStudent=0;
	SumPercentage=0;
	SumStudent_Curve=0;
	SumPercentage_Curve=0;
	for (i=1; i<=n; i++) {
		Num = Stat[sorted[i]];
		Percent = Stat[sorted[i]]/(NR-2);
		Num_Curve = TunedStat[sorted[i]];
		Percent_Curve = TunedStat[sorted[i]]/(NR-2);
		print ""
		print sorted[i]
		print Num
		print Percent
		print Num_Curve
		print Percent_Curve
		print "\n"
		SumStudent += Stat[sorted[i]];
		SumPercentage += Percent;
		SumStudent_Curve += TunedStat[sorted[i]];
		SumPercentage_Curve += Percent_Curve;
	}
	print ""
	print "Sum"
	print SumStudent
	print SumPercentage
	print SumStudent_Curve
	print SumPercentage_Curve
	print "\n"
}

endsnippet
#}}}
# vim:ft=snippets:
